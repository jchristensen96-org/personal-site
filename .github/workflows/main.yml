name: "Build and deploy website"

on:
  push:
    branches:
      - 'main'
    paths:
      - 'app/**'
      - 'deploy/**'

jobs:
  infra:
    name: "Create Infrastructure"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./deploy/terraform
    permissions:
      id-token: write
      contents: read
    env:
      TF_VAR_domain_name: ${{ secrets.ROOT_DOMAIN_NAME }}
      TF_VAR_www_domain_name: ${{ secrets.WWW_DOMAIN_NAME }}
      TF_IN_AUTOMATION: "true"
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            deploy

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        id: creds
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          role-session-name: ${{ secrets.ROLE_SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
          output-credentials: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.creds.outputs.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.creds.outputs.aws-secret-access-key }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - name: Terraform Apply
        id: apply
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve -input=false

  build:
    name: "Build and deploy website"
    runs-on: ubuntu-latest
    needs: infra
    defaults:
      run:
        working-directory: ./app
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            app

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Configure AWS Credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          role-session-name: ${{ secrets.ROLE_SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
          output-credentials: true

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Deploy
        env:
          SOURCE_DIR: "./dist"
          AWS_S3_BUCKET: ${{ secrets.ROOT_DOMAIN_NAME }}
        run: |
          aws s3 sync ${SOURCE_DIR} s3://${AWS_S3_BUCKET}/ --no-progress

      - name: Invalidate Cache
        env:
          DISTRO_ID: ${{ secrets.CF_DISTRO_ID }}
        run: |
          aws cloudfront create-invalidation --distribution-id ${DISTRO_ID} --paths "/*"